"use strict";

var crypto = require("crypto");
var buf = require("buffer");
var common = require('./index')

/**
 * str: 需要加密的字符串
 * method: 加密方式，默认sha1
 */
exports.Encrypt = function(str, method) {
	if (!method) method = "sha1";
	var Buffer = buf.Buffer;
	var buff = new Buffer(str);
	var bytes = buff.toString("binary");
	var c = crypto.createHash(method);
	c.update(bytes);
	return c.digest("hex");
};

exports.Encrypt_ASE = function(data, key) {
	key = key ? key : global.config.ase_key;
	var cipher = crypto.createCipher('aes-128-ecb', key);
	return cipher.update(data, 'utf8', 'hex') + cipher.final('hex');
}

exports.Decrypt_ASE = function(data, key) {
	key = key ? key : global.config.ase_key;
	var cipher = crypto.createDecipher('aes-128-ecb', key);
	return cipher.update(data, 'hex', 'utf8') + cipher.final('utf8');
}

exports.sign = function(val, secret) {
	secret = secret ? secret : global.config.ase_key;
	if ('string' != typeof val) throw new TypeError("Cookie value must be provided as a string.");
	if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");
	
	return val + '.' + crypto
		.createHmac('sha256', secret)
		.update(val)
		.digest('base64')
		.replace(/\=+$/, '');
};

exports.unsign = function(val, secret) {
	secret = secret ? secret : global.config.ase_key;
	if ('string' != typeof val) throw new TypeError("Signed cookie string must be provided.");
	if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");
	
	var str = val.slice(0, val.lastIndexOf('.')),
		mac = exports.sign(str, secret);

	return mac == val ? str : false;
};